load("@io_bazel_rules_go//go:def.bzl", "go_binary", "go_library")
load("@rules_pkg//pkg:tar.bzl", "pkg_tar")

go_library(
    name = "ls_lint_lib",
    srcs = ["main.go"],
    importpath = "github.com/loeffel-io/ls-lint/v2/cmd/ls_lint",
    visibility = ["//visibility:private"],
    deps = [
        "//internal/config",
        "//internal/debug",
        "//internal/linter",
        "//internal/rule",
        "@in_gopkg_yaml_v3//:yaml_v3",
    ],
)

go_binary(
    name = "ls-lint",
    embed = [":ls_lint_lib"],
    pure = "on",
    visibility = ["//visibility:public"],
    x_defs = {"Version": "{STABLE_GIT_TAG}"},
)

# linux ppc64le not supported yet: https://github.com/bazelbuild/platforms/pull/64
targets = [
    [
        "darwin",
        "arm64",
    ],
    [
        "darwin",
        "amd64",
    ],
    [
        "linux",
        "arm64",
    ],
    [
        "linux",
        "amd64",
    ],
    [
        "linux",
        "s390x",
    ],
    [
        "windows",
        "amd64",
    ],
]

[
    go_binary(
        name = "ls-lint-" + goos + "-" + goarch,
        embed = [":ls_lint_lib"],
        goarch = goarch,
        goos = goos,
        pure = "on",
        visibility = ["//visibility:public"],
        x_defs = {"Version": "{STABLE_GIT_TAG}"},
    )
    for goos, goarch in targets
]

[
    pkg_tar(
        name = "ls-lint-" + goos + "-" + goarch + "-pkg",
        srcs = [
            ":ls-lint-" + goos + "-" + goarch,
        ],
        package_file_name = "ls-lint-" + goos + "-" + goarch + ".tar",
    )
    for goos, goarch in targets
]
